---
import Layout from '../layouts/Layout.astro';

type Warehouse = {
	warehouseName: string;
	warehouseId: string;
	usedSpace: number;
  	totalSpace: number;
	inventory: {
		sku: string;
		quantity: number;
	}[];
};


// then() response.json() catch() catch errors
var data: Warehouse[] = [];


//const baseUrl = "http://localhost:3000";
const baseUrl = "http://lagarto9.ing.puc.cl";

try {
	const response = await fetch(`${baseUrl}/stocks-by-warehouse/`);
	data = await response.json();
} catch (error) {
	console.log(error);
}

---
<Layout title="Warehouse stock">
	<div class="container mt-5">
		{data.length === 0 && <h1 class="text-center">Error fetching data</h1>}
		
		{data.length > 0 && 
		<h1 class="text-center">Warehouse stock g9</h1>
		<div class="row mt-5">
			{data.map((warehouse) => 
			<div class="col">
				<h3 class="text-center">{warehouse.warehouseName}</h3>
				<p class="text-center">capacity: {warehouse.usedSpace} / {warehouse.totalSpace}</p>
				<table class="table">
					<thead>
					  <tr>
						  <th scope="col">SKU</th>
						  <th scope="col">Quantity</th>
					  </tr>
					</thead>
					<tbody>
						{warehouse.inventory.map((item) =>
							<tr>
								<td>{item.sku}</td>
								<td>{item.quantity}</td>
							</tr>
						)
						}
					</tbody>
				  </table>
			</div>
			)}
		</div>
	}
		
	</div>

</Layout>


<style>
	main {
		margin: auto;
		padding: 1.5rem;
		max-width: 60ch;
	}
	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.4rem;
	}
	.instructions code {
		font-size: 0.875em;
		font-weight: bold;
		background: rgba(var(--accent), 12%);
		color: rgb(var(--accent));
		border-radius: 4px;
		padding: 0.3em 0.45em;
	}
	.instructions strong {
		color: rgb(var(--accent));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 1rem;
		padding: 0;
	}
</style>
